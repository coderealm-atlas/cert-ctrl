export const powershellTemplate = `# cert-ctrl installation script (PowerShell)
# Generated by: {{BASE_URL}}
# Mirror: {{MIRROR_NAME}}
# Version: {{VERSION}}

param(
    [switch]$UserInstall,
    [string]$Version = "{{VERSION}}",
    [string]$InstallDir,
    [switch]$Verbose,
    [switch]$Force,
    [switch]$DryRun
)

function Write-Info($Message) {
    Write-Host "[INFO] $Message"
}

function Write-Success($Message) {
    Write-Host "[SUCCESS] $Message" -ForegroundColor Green
}

function Write-WarningMessage($Message) {
    Write-Warning $Message
}

function Write-ErrorMessage($Message) {
    Write-Error $Message
}

$installPath = if ($InstallDir) {
    $InstallDir
} elseif ($UserInstall -or {{USER_INSTALL}}) {
    Join-Path $env:USERPROFILE "AppData\Local\Programs\cert-ctrl"
} else {
    "C:\\Program Files\\cert-ctrl"
}

$mirrorUrl = "{{MIRROR_URL}}"
if ($mirrorUrl -eq "{{BASE_URL}}/releases/proxy") {
    $packageUrl = "$mirrorUrl/$Version/cert-ctrl-windows.zip"
} else {
    $packageUrl = "$mirrorUrl/{{GITHUB_REPO_OWNER}}/{{GITHUB_REPO_NAME}}/releases/download/$Version/cert-ctrl-windows.zip"
}

$tempDir = New-Item -ItemType Directory -Path ([System.IO.Path]::GetTempPath()) -Name ("cert-ctrl-" + [System.Guid]::NewGuid().ToString())
$zipPath = Join-Path $tempDir "cert-ctrl.zip"

Write-Info "Downloading cert-ctrl $Version..."
Invoke-WebRequest -Uri $packageUrl -OutFile $zipPath -UseBasicParsing

if ($DryRun -or {{DRY_RUN}}) {
    Write-Info "DRY RUN: Installation files prepared at $tempDir"
    exit 0
}

Expand-Archive -Path $zipPath -DestinationPath $tempDir -Force

New-Item -ItemType Directory -Force -Path $installPath | Out-Null
Copy-Item -Path (Join-Path $tempDir "cert-ctrl.exe") -Destination $installPath -Force

Write-Success "cert-ctrl installed at $installPath"
Write-Info "Add $installPath to your PATH if not already present."
`;
